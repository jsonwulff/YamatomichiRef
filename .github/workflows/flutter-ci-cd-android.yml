name: Android build and test

on:
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build-and-test-android:
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v1

      - name: Setup java
        uses: actions/setup-java@v1
        with:
          java-version: '12.x'

      # Setup the flutter environment.
      - uses: subosito/flutter-action@v1
        with:
          channel: 'stable' # 'dev', 'alpha', 'beta'
          # flutter-version: '1.12.x' # you can also specify exact version of flutter

      - name: Get dependencies
        run: flutter pub get
      
      # Static code analysis 
      - name: Analyze code
        run: flutter analyze .
      
      # Run unit and widget tests
      - name: Run tests
        run: flutter test --coverage

      # Uploads coverage report to code coverage
      - uses: codecov/codecov-action@v1.0.2
        with:
          token: ${{secrets.CODECOV_TOKEN}}
          file: ./coverage/lcov.info
      
      # Build an android version of the application
      - name: Build android APK
        run: flutter build apk
      
       # Upload generated apk to the artifacts, is included in the github
       # action build
      - uses: actions/upload-artifact@v1
        with:
          name: apk-build
          path: build/app/outputs/apk/release
      
      # Uploads the APK to firebase and send a notice to all in group testers
      - name: upload artifact to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{secrets.ANDROID}} 
          token: ${{secrets.FIREBASE_TOKEN}} 
          groups: Android testers
          file: build/app/outputs/apk/release/app-release.apk